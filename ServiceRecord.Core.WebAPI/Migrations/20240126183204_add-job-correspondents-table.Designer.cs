// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceRecord.Core.WebAPI.DatabaseContext;

#nullable disable

namespace ServiceRecord.Core.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240126183204_add-job-correspondents-table")]
    partial class addjobcorrespondentstable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.Customer", b =>
                {
                    b.Property<string>("CustomerCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.Job", b =>
                {
                    b.Property<string>("JobID")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CustomerContact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("DblTimeHours")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NrmlHoursDaily")
                        .HasColumnType("int");

                    b.Property<string>("NrmlHoursEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrmlHoursStart")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobID");

                    b.HasIndex("CustomerCode");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.JobCorrespondent", b =>
                {
                    b.Property<int>("JobCorrespondentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobCorrespondentID"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobID")
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("JobCorrespondentID");

                    b.HasIndex("JobID");

                    b.ToTable("JobCorrespondents");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.Job", b =>
                {
                    b.HasOne("ServiceRecord.Core.WebAPI.Models.Customer", "Customer")
                        .WithMany("Jobs")
                        .HasForeignKey("CustomerCode");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.JobCorrespondent", b =>
                {
                    b.HasOne("ServiceRecord.Core.WebAPI.Models.Job", "Job")
                        .WithMany("JobCorrespondents")
                        .HasForeignKey("JobID");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.Customer", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("ServiceRecord.Core.WebAPI.Models.Job", b =>
                {
                    b.Navigation("JobCorrespondents");
                });
#pragma warning restore 612, 618
        }
    }
}
